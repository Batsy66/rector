///////////////////////////////////////////////////////////////////
//
// Служебный модуль с набором служебных параметров приложения
//
// Структура модуля реализована в соответствии с рекомендациями 
// oscript-app-template (C) EvilBeaver
//
///////////////////////////////////////////////////////////////////

Перем ЛогЯдра;

// ИмяПродукта
//	Возвращает имя продукта
//
// Возвращаемое значение:
//   Строка   - Значение имени продукта
//
Функция ИмяПродукта() Экспорт
	
	Возврат "prepare-core";
	
КонецФункции // ИмяПродукта

//	Возвращает идентификатор лога приложения
//
// Возвращаемое значение:
//   Строка   - Значение идентификатора лога приложения
//
Функция ИмяЛогаСистемы() Экспорт
	
	Возврат "oscript.app." + ИмяПродукта();
	
КонецФункции // ИмяЛогаСистемы

// ВерсияПродукта
//	Возвращает текущую версию продукта
//
// Возвращаемое значение:
//   Строка   - Значение текущей версии продукта
//
Функция ВерсияПродукта() Экспорт

	Возврат "0.0.1";

КонецФункции // ВерсияПродукта()

Процедура ПриРегистрацииКомандПриложения(Знач КлассыРеализацииКоманд) Экспорт

	КлассыРеализацииКоманд[ИмяКомандыВерсия()] = "КомандаVersion";

КонецПроцедуры // ПриРегистрацииКомандПриложения

Функция ИмяКомандыПоУмолчанию() Экспорт

	Возврат "help";
	
КонецФункции // ИмяКомандыПоУмолчанию

// Возвращает имя команды версия (ключ командной строки)
//
//  Возвращаемое значение:
//   Строка - имя команды
//
Функция ИмяКомандыВерсия() Экспорт
	
	Возврат "version";

КонецФункции // ИмяКомандыВерсия

Функция Имя1С() Экспорт
	Возврат "1c";
КонецФункции

Функция ПочтовыйЯщик1С() Экспорт
	Возврат "1c@1c.ru";
КонецФункции

Функция ИмяКоммитераПоУмолчанию() Экспорт
	Возврат "ci-bot";
КонецФункции

Функция ПочтаКоммитераПоУмолчанию() Экспорт
	Возврат "ci-bot@" + ДоменноеИмяПоУмолчанию();
КонецФункции

Функция ДоменноеИмяПоУмолчанию() Экспорт
	Возврат "1bit.com"
КонецФункции

Функция ДатаИнициализацииРепозитория() Экспорт
	Возврат Дата("20150101");
КонецФункции


// Получить объект логирования. Кешируется
//
//  Возвращаемое значение:
//   Лог - объект Лог для приложения
//
Функция Лог() Экспорт
	Если ЛогЯдра = Неопределено Тогда
		ЛогЯдра = Логирование.ПолучитьЛог(ИмяЛогаСистемы());
		ЛогЯдра.УстановитьУровень(УровниЛога.Информация);
	КонецЕсли;

	Возврат ЛогЯдра;	
КонецФункции